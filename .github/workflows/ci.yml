name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '21'

jobs:
  setup:
    name: ☕ Set up Java
    runs-on: ubuntu-latest
    environment: DEV
    outputs:
      java-version: ${{ env.JAVA_VERSION }}
    steps:
      - name: Set up Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

  checkout-and-cache:
    name: Checkout & Cache
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3
      - name: 💾 Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-
      - name: 📦 Make Gradle wrapper executable
        run: chmod +x ./gradlew

  build:
    name: 🔨 Build & Test
    runs-on: ubuntu-latest
    needs: checkout-and-cache
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3
      - name: ✅ Run Tests
        run: ./gradlew test
      - name: 🔧 Build Project
        run: ./gradlew clean build


  docker:
    name: 🐳 Build & Push to GHCR
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PUSH_TOKEN }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/mini-url:latest
          docker build -t $IMAGE_NAME .
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Push Docker image to GHCR
        run: docker push $IMAGE_NAME
