plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
}

group = 'com.immortals'
version = '1.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    archiveFileName = 'mini-url-1.0.1.jar'
    mainClass.set('com.immortals.miniurl.MiniUrlApplication')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.lettuce:lettuce-core:6.4.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    implementation 'org.hibernate.orm:hibernate-envers'
    implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    implementation 'org.liquibase:liquibase-core'
    implementation 'jakarta.servlet:jakarta.servlet-api:4.0.4'
    implementation 'com.nimbusds:nimbus-jose-jwt:10.3'

    implementation("com.fasterxml.jackson.core:jackson-databind")

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5")

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.12.0'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}
